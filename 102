Given a binary tree, return the level order traversal of its nodes' values. (ie, from left to right, level by level).
For example:
Given binary tree [3,9,20,null,null,15,7],
    3
   / \
  9  20
    /  \
   15   7
return its level order traversal as:
[
  [3],
  [9,20],
  [15,7]
]

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
 
class Solution {
public:
    void  InsertVector(TreeNode* root, int i, vector<vector<int>>& level) {
             if (i >= level.size()) {
                  vector <int> tmp;
                  level.push_back (tmp);
              }
              level[i].push_back(root->val);
              if (root->left) InsertVector(root->left, i + 1, level);
              if (root->right) InsertVector(root->right, i + 1, level);
           }

    vector<vector<int>> levelOrder(TreeNode* root) {
    
        vector<vector<int>> level;
        if (!root) return level;
        InsertVector(root, 0, level);
        return level;
    }
}; 
