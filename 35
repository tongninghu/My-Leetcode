Given a sorted array and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.

You may assume no duplicates in the array.

Here are few examples.
[1,3,5,6], 5 → 2
[1,3,5,6], 2 → 1
[1,3,5,6], 7 → 4
[1,3,5,6], 0 → 0

class Solution {
public:
    
    int search(vector<int>& nums, int begin, int end, int target) {
        if (begin == end) 
            return nums[begin] >= target? begin : begin + 1;
        
        int mid = (end - begin)/2 + begin;
        if (nums[mid] >= target) 
            return search(nums, begin, mid, target);
        else 
            return search(nums, mid + 1, end, target);
    }
    
    int searchInsert(vector<int>& nums, int target) {
        if (nums.size() == 0) return 0;
        return search(nums, 0, nums.size() - 1, target);
    }   
    
};
