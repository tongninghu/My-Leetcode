Given a binary tree, find its maximum depth.

The maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int maxD (TreeNode* root, int depth) {

        if (!root->left && !root->right) return depth ;
        else if (root->left && root->right) return max(maxD(root->left, depth + 1), maxD(root->right, depth + 1));
        else if (root->left && !root->right) return maxD(root->left, depth + 1);
        else  return maxD(root->right, depth + 1);
    }
    
    int maxDepth(TreeNode* root) {
        if (!root) return 0;
        return maxD(root, 1);
    }
};
