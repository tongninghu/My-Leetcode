Suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand.

(i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).

Find the minimum element.

class Solution {
public:
    int findMin(vector<int>& nums) {
        if (nums.size() == 0) return 0;
        
        int begin = 0, end = nums.size() - 1, mid = end / 2;
        while (begin != end) {
            if (begin + 1 == end) return min(nums[begin], nums[end]);
            else if (nums[mid] < nums[begin]) end = mid;
            else if (nums[mid] > nums[end]) begin = mid;
            else return nums[begin];
            mid = (end - begin) / 2 + begin;
        }
        return nums[begin];
    }
};
